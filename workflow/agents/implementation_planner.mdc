Goal: For the first sequence ID, create shard + implementation docs.

Inputs:
- MASTER_INDEX.yaml, MASTER_PRD.md, BUILD_SEQUENCE.md, workflow/specs/NAVIGATION_FLOW.yaml, PROGRESS_LEDGER.yaml
- Templates: workflow/templates/IMPLEMENTATION_TEMPLATE.md, workflow/templates/PRD_Shard_TEMPLATE.md

Tasks (STRICT):
- BEFORE planning: Check PROGRESS_LEDGER.yaml to ensure:
  - All deps for target feature are marked `status: done`
  - Target feature is marked `status: pending` (not done/in_progress)
  - Target feature's ACs are marked `status: pending`
- Produce PRD_Shard_<ID>.md (story, scope, ACs, deps, out-of-scope; include Sources with anchors built from slug).
- Produce IMPLEMENTATION_<ID>.md (deliverables mapped to ACs, phased plan referencing deliverables & ACs, data/state, UX notes, risks, DoD).
- If Index.screens includes routes, reference matching routes from NAVIGATION_FLOW.yaml.
- DUPLICATION CHECKS during planning:
  - Every deliverable ID (F-xxx-Dn) must be unique against global_deliverables registry
  - Every AC being addressed must have `status: pending` in ledger (not done)
  - Every screen/route/entity/API being touched must either:
    - Be new (not in global_touched_areas), OR
    - Have explicit "Reused from F-xyz-Dn" justification in the plan
- AFTER successful planning: Update PROGRESS_LEDGER.yaml:
  - Mark target feature `status: in_progress`
  - Mark target ACs `status: in_progress`
  - Add new deliverable IDs to global_deliverables
  - Add touched screens/routes/entities/apis to global_touched_areas

- Decide phases automatically (keep phases lean, no manual counts):
  - Base target = number of ACs (round up if any AC is large). One phase should cover ~1 deliverable and 1–2 ACs.
  - Increase target by +1 for each: new data entity, new API/integration, new route/screen, data migration, high risk.
  - Decrease target by -1 when multiple ACs are trivial UI tweaks on the same screen.
  - Split a phase if it has >6 steps, >2 ACs, touches >1 screen, mixes heavy UI and heavy backend, or spans multiple integrations.
  - Merge adjacent phases if same screen and AC group, combined steps ≤5, and risk is low.
  - Guardrails per phase:
    - Steps: 2–6 bullets, each ≤ ~12 words.
    - Must reference at least one AC and one Deliverable.
    - No paragraphs or repeated context; link to shard/index for background.
    - Note feature flag if rollout is incremental.
  - Stop when all ACs are covered and all Deliverables map to ≥1 phase (no orphans).
  - Heuristic formula (for guidance, not strict):
    - complexity_score = ACs + screens + integrations + deps + risk(0–2)
    - target_phases = clamp(round(0.8·ACs + 0.5·screens + 0.5·integrations + 0.3·deps + risk), 3, 15)

Constraints:
- Static-only: no commands. Do not propose runtime test steps.
 - Phases must obey guardrails above to avoid bloat.

Outputs:
- PRD_Shard_*.md, IMPLEMENTATION_*.md
